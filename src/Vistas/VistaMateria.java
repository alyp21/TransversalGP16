
package Vistas;

import Persistencia.Conexion;
import Modelo.Materia;
import Persistencia.MateriaData;
import java.awt.HeadlessException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mariadb.jdbc.Connection;

public class VistaMateria extends javax.swing.JInternalFrame {

    
    private Connection con;
    private MateriaData mat;
    DefaultTableModel modelo;
    
    public VistaMateria() {
        initComponents();
        con = (Connection) Conexion.getConexion();
        mat = new MateriaData(con);
        armarCabecera();
        jcbEstadoMateria.setModel(new DefaultComboBoxModel<>(new String[] {"Activo", "Inactivo"}));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlGestionMaterias = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlNombreMateria = new javax.swing.JLabel();
        jlAño = new javax.swing.JLabel();
        jlEstadoMateria = new javax.swing.JLabel();
        jtfNombreMateria = new javax.swing.JTextField();
        jtfAño = new javax.swing.JTextField();
        jcbEstadoMateria = new javax.swing.JComboBox<>();
        jbVerMaterias = new javax.swing.JButton();
        jbAltaLogicaMateria = new javax.swing.JButton();
        jbBajaLogicaMateria = new javax.swing.JButton();
        jbInsertarMateria = new javax.swing.JButton();
        jbActualizarMaterias = new javax.swing.JButton();
        jbEliminarMateria = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();

        setClosable(true);

        jlGestionMaterias.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlGestionMaterias.setText("Gestion de Materias");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlNombreMateria.setText("Nombre:");

        jlAño.setText("Año:");

        jlEstadoMateria.setText("Estado:");

        jcbEstadoMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));

        jbVerMaterias.setText("Ver Materias");
        jbVerMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerMateriasActionPerformed(evt);
            }
        });

        jbAltaLogicaMateria.setText("Alta Logica");
        jbAltaLogicaMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAltaLogicaMateriaActionPerformed(evt);
            }
        });

        jbBajaLogicaMateria.setText("Baja Logica");
        jbBajaLogicaMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBajaLogicaMateriaActionPerformed(evt);
            }
        });

        jbInsertarMateria.setText("Insertar");
        jbInsertarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsertarMateriaActionPerformed(evt);
            }
        });

        jbActualizarMaterias.setText("Actualizar");
        jbActualizarMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarMateriasActionPerformed(evt);
            }
        });

        jbEliminarMateria.setText("Eliminar");
        jbEliminarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarMateriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlEstadoMateria)
                    .addComponent(jlAño)
                    .addComponent(jlNombreMateria))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfAño, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtfNombreMateria, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcbEstadoMateria, 0, 130, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbInsertarMateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbActualizarMaterias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbEliminarMateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbBajaLogicaMateria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbVerMaterias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jbAltaLogicaMateria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAltaLogicaMateria)
                    .addComponent(jbInsertarMateria)
                    .addComponent(jlNombreMateria)
                    .addComponent(jtfNombreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBajaLogicaMateria)
                    .addComponent(jbActualizarMaterias)
                    .addComponent(jlAño)
                    .addComponent(jtfAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbVerMaterias)
                    .addComponent(jbEliminarMateria)
                    .addComponent(jlEstadoMateria)
                    .addComponent(jcbEstadoMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Año", "Estado"
            }
        ));
        jScrollPane2.setViewportView(jtMaterias);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jlGestionMaterias))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jlGestionMaterias)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbVerMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerMateriasActionPerformed
       
        cargarMaterias();
        
           jbInsertarMateria.setEnabled(true);
           jbActualizarMaterias.setEnabled(true);
           jbEliminarMateria.setEnabled(true);
           jbAltaLogicaMateria.setEnabled(true);
           jbBajaLogicaMateria.setEnabled(true);
    }//GEN-LAST:event_jbVerMateriasActionPerformed

    private void jbInsertarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsertarMateriaActionPerformed
        try{
           Materia materia = new Materia();

           materia.setNombreMateria(jtfNombreMateria.getText());
           materia.setAnioMateria(Integer.parseInt(jtfAño.getText()));
           String estadoSeleccionado = (String) jcbEstadoMateria.getSelectedItem();
           materia.setEstadoMateria(estadoSeleccionado.equals("Activo"));
           
           mat.guardarMateria(materia);
           JOptionPane.showMessageDialog(this, "Materia guardada con exito");

           limpiarCampos();
           cargarMaterias();
           
       }catch(HeadlessException | NumberFormatException e){
           JOptionPane.showMessageDialog(this, "Error al guardar la materia"+ e.getMessage());
       }
    }//GEN-LAST:event_jbInsertarMateriaActionPerformed

    private void jbAltaLogicaMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAltaLogicaMateriaActionPerformed
        try {
            String nombreMateria = jtfNombreMateria.getText();
            Materia m = mat.buscarMateria(nombreMateria);

        if (m != null) {
            if (!m.isEstadoMateria()) {
                    mat.altaLogicaMateria(nombreMateria);
                    m.setEstadoMateria(true);
                    jcbEstadoMateria.setSelectedItem("Activo");
                    JOptionPane.showMessageDialog(this, "Materia dada de alta correctamente.");
                
                    limpiarCampos();
                    cargarMaterias();
                
            } else {
                JOptionPane.showMessageDialog(this, "La materia ya esta activa.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro una materia con este nombre.");
        } 
            } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un nombre valido.");
            }                                                      
    }//GEN-LAST:event_jbAltaLogicaMateriaActionPerformed

    private void jbActualizarMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarMateriasActionPerformed
            
        try {
            String nombre = jtfNombreMateria.getText();
            int anio = Integer.parseInt(jtfAño.getText());
            boolean estado = jcbEstadoMateria.getSelectedItem().equals("Activo");

            Materia m = new Materia();
            m.setNombreMateria(nombre);
            m.setAnioMateria(anio);
            m.setEstadoMateria(estado);
            mat.actualizarMateria(m);
            
            limpiarCampos();
            cargarMaterias();
            
        } catch (NumberFormatException e) {
           JOptionPane.showMessageDialog(this, "No se encontro ninguna materia con este nombre.");
        }
    }//GEN-LAST:event_jbActualizarMateriasActionPerformed

    private void jbBajaLogicaMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBajaLogicaMateriaActionPerformed
        try {
            String nombreMateria = jtfNombreMateria.getText();
            Materia m = mat.buscarMateria(nombreMateria);

        if (m != null) {
            if (m.isEstadoMateria()) {
                mat.bajaLogicaMateria(nombreMateria);
                m.setEstadoMateria(false);
                jcbEstadoMateria.setSelectedItem("Inactivo");
                JOptionPane.showMessageDialog(this, "Materia dada de baja correctamente.");
                
                limpiarCampos();
                cargarMaterias();
                
            } else {
                JOptionPane.showMessageDialog(this, "La materia ya esta inactiva.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro una materia con este nombre.");
        } 
            } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un nombre valido.");
            }                         
    }//GEN-LAST:event_jbBajaLogicaMateriaActionPerformed

    private void jbEliminarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarMateriaActionPerformed
        try {
            String nombreMateria = jtfNombreMateria.getText();
            mat.eliminarMateria(nombreMateria);
            JOptionPane.showMessageDialog(this, "Materia eliminada");
           
        limpiarCampos();
        cargarMaterias();
        
       } catch (HeadlessException | NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
       }
    }//GEN-LAST:event_jbEliminarMateriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbActualizarMaterias;
    private javax.swing.JButton jbAltaLogicaMateria;
    private javax.swing.JButton jbBajaLogicaMateria;
    private javax.swing.JButton jbEliminarMateria;
    private javax.swing.JButton jbInsertarMateria;
    private javax.swing.JButton jbVerMaterias;
    private javax.swing.JComboBox<String> jcbEstadoMateria;
    private javax.swing.JLabel jlAño;
    private javax.swing.JLabel jlEstadoMateria;
    private javax.swing.JLabel jlGestionMaterias;
    private javax.swing.JLabel jlNombreMateria;
    private javax.swing.JTable jtMaterias;
    private javax.swing.JTextField jtfAño;
    private javax.swing.JTextField jtfNombreMateria;
    // End of variables declaration//GEN-END:variables
    
    private void cargarMaterias() {
        
    modelo.setRowCount(0);
    
    List<Materia> materias = mat.verMaterias();

    for (Materia m : materias) {
        modelo.addRow(new Object[]{

            m.getNombreMateria(),
            m.getAnioMateria(),
            m.isEstadoMateria()? "Activo" : "Inactivo"
        });
    }
    }
    
    private void limpiarCampos() {
    jtfNombreMateria.setText("");
    jtfAño.setText("");
    jcbEstadoMateria.setSelectedIndex(0);
}
    
    private void armarCabecera() {
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        modelo.addColumn("Estado");
        jtMaterias.setModel(modelo);
    }
}
