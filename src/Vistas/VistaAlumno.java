
package Vistas;

import Modelo.Alumno;
import Persistencia.Conexion;
import Persistencia.AlumnooData;
import java.awt.HeadlessException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mariadb.jdbc.Connection;

public class VistaAlumno extends javax.swing.JInternalFrame {

   DefaultTableModel modeloTabla;
   private Connection con;
   private AlumnooData alum;
   private Alumno alumnoActual=null;
   
    public  VistaAlumno() {
        initComponents();
        con= (Connection) Conexion.getConexion();
        alum= new AlumnooData(con);
        armarCabeceraTabla();
        jcbEstadoAlumno.setModel(new DefaultComboBoxModel<>(new String[] {"Activo", "Inactivo"}));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jlGestionAlumnos = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlDni = new javax.swing.JLabel();
        jlApellido = new javax.swing.JLabel();
        jlNombreAlumno = new javax.swing.JLabel();
        jlFechaNacimiento = new javax.swing.JLabel();
        jlEstadoAlumno = new javax.swing.JLabel();
        jtfDni = new javax.swing.JTextField();
        jtfApellido = new javax.swing.JTextField();
        jtfNombreAlumno = new javax.swing.JTextField();
        jtfFechaNacimiento = new javax.swing.JTextField();
        jcbEstadoAlumno = new javax.swing.JComboBox<>();
        jbVerAlumnos = new javax.swing.JButton();
        jbAltaLogicaAlumno = new javax.swing.JButton();
        jbBajaLogicaAlumno = new javax.swing.JButton();
        jbInsertarAlumno = new javax.swing.JButton();
        jbActualizarAlumnos = new javax.swing.JButton();
        jbEliminarAlumnos = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtAlumnos = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);

        jlGestionAlumnos.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlGestionAlumnos.setText("Gestion de Alumnos");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlDni.setText("DNI:");

        jlApellido.setText("Apellido:");

        jlNombreAlumno.setText("Nombre:");

        jlFechaNacimiento.setText("Fecha de Nacimiento:");

        jlEstadoAlumno.setText("Estado:");

        jtfDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDniActionPerformed(evt);
            }
        });

        jcbEstadoAlumno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        jcbEstadoAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadoAlumnoActionPerformed(evt);
            }
        });

        jbVerAlumnos.setText("Ver Alumnos");
        jbVerAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerAlumnosActionPerformed(evt);
            }
        });

        jbAltaLogicaAlumno.setText("Alta Logica");
        jbAltaLogicaAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAltaLogicaAlumnoActionPerformed(evt);
            }
        });

        jbBajaLogicaAlumno.setText("Baja Logica");
        jbBajaLogicaAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBajaLogicaAlumnoActionPerformed(evt);
            }
        });

        jbInsertarAlumno.setText("Insertar");
        jbInsertarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsertarAlumnoActionPerformed(evt);
            }
        });

        jbActualizarAlumnos.setText("Actualizar");
        jbActualizarAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarAlumnosActionPerformed(evt);
            }
        });

        jbEliminarAlumnos.setText("Eliminar");
        jbEliminarAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarAlumnosActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlFechaNacimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlDni)
                            .addComponent(jlApellido)
                            .addComponent(jlNombreAlumno))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(jtfDni)
                            .addComponent(jtfNombreAlumno)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlEstadoAlumno)
                        .addGap(37, 37, 37)
                        .addComponent(jcbEstadoAlumno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbActualizarAlumnos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbInsertarAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbEliminarAlumnos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbBajaLogicaAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbVerAlumnos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jbAltaLogicaAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlDni)
                            .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbBuscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlApellido)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNombreAlumno))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAltaLogicaAlumno)
                            .addComponent(jbInsertarAlumno))
                        .addGap(12, 12, 12)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlFechaNacimiento)
                            .addComponent(jtfFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlEstadoAlumno)
                            .addComponent(jcbEstadoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbBajaLogicaAlumno)
                            .addComponent(jbActualizarAlumnos))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbEliminarAlumnos)
                            .addComponent(jbVerAlumnos))
                        .addGap(25, 25, 25))))
        );

        jtAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Dni", "Apellido", "Nombre", "Fecha de Nacimiento", "Estado"
            }
        ));
        jScrollPane3.setViewportView(jtAlumnos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jlGestionAlumnos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jlGestionAlumnos)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void jbVerAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerAlumnosActionPerformed
        cargarAlumnos();
        
        jbInsertarAlumno.setEnabled(true);
        jbActualizarAlumnos.setEnabled(true);
        jbEliminarAlumnos.setEnabled(true);
        jbAltaLogicaAlumno.setEnabled(true);
        jbBajaLogicaAlumno.setEnabled(true);
    }//GEN-LAST:event_jbVerAlumnosActionPerformed

    private void jbInsertarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsertarAlumnoActionPerformed
       try{
           Alumno alumnito = new Alumno();
           alumnito.setDni(Integer.parseInt(jtfDni.getText()));
           alumnito.setApellido(jtfApellido.getText());
           alumnito.setNombre(jtfNombreAlumno.getText());
           alumnito.setFechaNacimiento(LocalDate.parse(jtfFechaNacimiento.getText()));
           String estadoSeleccionado = (String) jcbEstadoAlumno.getSelectedItem();
           alumnito.setEstado(estadoSeleccionado.equals("Activo"));
           
           alum.guardarAlumno(alumnito);
           JOptionPane.showMessageDialog(this, "Alumno guardado con exito");
           jbInsertarAlumno.setEnabled(false);
           jbActualizarAlumnos.setEnabled(false);
           jbEliminarAlumnos.setEnabled(false);
           jbAltaLogicaAlumno.setEnabled(false);
           jbBajaLogicaAlumno.setEnabled(false);

           limpiarCampos();
           cargarAlumnos();
           
       }catch(HeadlessException | NumberFormatException e){
           JOptionPane.showMessageDialog(this, "Error al guardar el alumno"+ e.getMessage());
       }
    }//GEN-LAST:event_jbInsertarAlumnoActionPerformed

    private void jbEliminarAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarAlumnosActionPerformed
       try {
        int dni = Integer.parseInt(jtfDni.getText());
        alum.eliminarAlumno(dni);
        JOptionPane.showMessageDialog(this, "Alumno eliminado");
        
           jbInsertarAlumno.setEnabled(false);
           jbActualizarAlumnos.setEnabled(false);
           jbEliminarAlumnos.setEnabled(false);
           jbAltaLogicaAlumno.setEnabled(false);
           jbBajaLogicaAlumno.setEnabled(false);
           
        limpiarCampos();
        cargarAlumnos();
        
       } catch (HeadlessException | NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
       }
    }//GEN-LAST:event_jbEliminarAlumnosActionPerformed
 
    private void jbAltaLogicaAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAltaLogicaAlumnoActionPerformed
        try {
        int dni = Integer.parseInt(jtfDni.getText());
        Alumno a = alum.buscarAlumnoPorDni(dni);

        if (a != null) {
            if (!a.isEstado()) {
                alum.altaLogica(dni);
                a.setEstado(true);
                jcbEstadoAlumno.setSelectedItem("Activo");
                JOptionPane.showMessageDialog(this, "Alumno dado de alta correctamente.");
                
                jbInsertarAlumno.setEnabled(false);
                jbActualizarAlumnos.setEnabled(false);
                jbEliminarAlumnos.setEnabled(false);
                jbAltaLogicaAlumno.setEnabled(false);
                jbBajaLogicaAlumno.setEnabled(false);
                
                limpiarCampos();
                cargarAlumnos();
            } else {
                JOptionPane.showMessageDialog(this, "El alumno ya esta activo.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro un alumno con ese DNI.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Debe ingresar un DNI valido.");
    }
    }//GEN-LAST:event_jbAltaLogicaAlumnoActionPerformed

    private void jbBajaLogicaAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBajaLogicaAlumnoActionPerformed
        try {
        int dni = Integer.parseInt(jtfDni.getText());
        Alumno a = alum.buscarAlumnoPorDni(dni);

        if (a != null) {
            if (a.isEstado()) {
                alum.bajaLogica(dni);
                a.setEstado(false);
                jcbEstadoAlumno.setSelectedItem("Inactivo");
                JOptionPane.showMessageDialog(this, "Alumno dado de baja correctamente.");
                
                jbInsertarAlumno.setEnabled(false);
                jbActualizarAlumnos.setEnabled(false);
                jbEliminarAlumnos.setEnabled(false);
                jbAltaLogicaAlumno.setEnabled(false);
                jbBajaLogicaAlumno.setEnabled(false);
                
                limpiarCampos();
                cargarAlumnos();
            } else {
                JOptionPane.showMessageDialog(this, "El alumno ya esta inactivo.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro un alumno con ese DNI.");
        } 
            } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Debe ingresar un DNI valido.");
        }
    }//GEN-LAST:event_jbBajaLogicaAlumnoActionPerformed

    private void jbActualizarAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarAlumnosActionPerformed
        try {
            int dni = Integer.parseInt(jtfDni.getText());
            String apellido = jtfApellido.getText();
            String nombre = jtfNombreAlumno.getText();
            boolean estado = jcbEstadoAlumno.getSelectedItem().equals("Activo");

            Alumno a = new Alumno();
            a.setDni(dni);
            a.setApellido(apellido);
            a.setNombre(nombre);
            a.setFechaNacimiento(LocalDate.parse(jtfFechaNacimiento.getText()));
            a.setEstado(estado);
            alum.actualizarAlumno(a);
            
            limpiarCampos();
            cargarAlumnos();
            
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "No se encontro ningun alumno con este dni.");
        }
    }//GEN-LAST:event_jbActualizarAlumnosActionPerformed

    private void jtfDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDniActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        try{
            Integer dni= Integer.parseInt(jtfDni.getText());
            alumnoActual= alum.buscarAlumnoPorDni(dni);
            
            
            if(alumnoActual!=null){
                jtfApellido.setText(alumnoActual.getApellido());
                jtfNombreAlumno.setText(alumnoActual.getNombre());
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy/MM/dd");
                jtfFechaNacimiento.setText(alumnoActual.getFechaNacimiento().format(formato));
                if (alumnoActual.isEstado()){
                    jcbEstadoAlumno.setSelectedItem("Activo");
                } else {
                    jcbEstadoAlumno.setSelectedItem("Inactivo");
                }
        } else {
                JOptionPane.showMessageDialog(this, "No se encontro ningun alumno con este dni.");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Debe ingresar un numero valido.");
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jcbEstadoAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadoAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoAlumnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbActualizarAlumnos;
    private javax.swing.JButton jbAltaLogicaAlumno;
    private javax.swing.JButton jbBajaLogicaAlumno;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminarAlumnos;
    private javax.swing.JButton jbInsertarAlumno;
    private javax.swing.JButton jbVerAlumnos;
    private javax.swing.JComboBox<String> jcbEstadoAlumno;
    private javax.swing.JLabel jlApellido;
    private javax.swing.JLabel jlDni;
    private javax.swing.JLabel jlEstadoAlumno;
    private javax.swing.JLabel jlFechaNacimiento;
    private javax.swing.JLabel jlGestionAlumnos;
    private javax.swing.JLabel jlNombreAlumno;
    private javax.swing.JTable jtAlumnos;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfFechaNacimiento;
    private javax.swing.JTextField jtfNombreAlumno;
    // End of variables declaration//GEN-END:variables
    
    private void cargarAlumnos() {
        
    modeloTabla.setRowCount(0);
    
    List<Alumno> lista = alum.verAlumnos();

    for (Alumno a : lista) {
        modeloTabla.addRow(new Object[]{
            a.getDni(),
            a.getApellido(),
            a.getNombre(),
            a.getFechaNacimiento(),
            a.isEstado() ? "Activo" : "Inactivo"
        });
    }
    }
    private void limpiarCampos() {
    jtfDni.setText("");
    jtfApellido.setText("");
    jtfNombreAlumno.setText("");
    jtfFechaNacimiento.setText("");
    jcbEstadoAlumno.setSelectedIndex(0);
}
    
    private void armarCabeceraTabla() {
        modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Dni");
        modeloTabla.addColumn("Apellido");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Fecha de Nacimiento");
        modeloTabla.addColumn("Estado");
        jtAlumnos.setModel(modeloTabla);
    }
}
